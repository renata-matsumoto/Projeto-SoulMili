{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"E:\\\\SoulCode\\\\Reactnt\\\\SoulMili\\\\src\\\\Componentes\\\\Form.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { styles } from \"../Style/style\";\nexport default function Dados(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    valor: 0,\n    acr: 0.70,\n    saldo: 0\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      dados = _useState2[0],\n      setDados = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      resultado = _useState4[0],\n      setResultado = _useState4[1];\n\n  var _useState5 = useState(1000),\n      _useState6 = _slicedToArray(_useState5, 2),\n      saldo = _useState6[0],\n      setSaldo = _useState6[1];\n\n  return React.createElement(View, {\n    style: styles.dados,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    style: styles.formImg,\n    source: require(\"../../img/Logo1.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  })), React.createElement(Text, {\n    style: styles.dadosText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, \"Dados para Dep\\xF3sito\"), React.createElement(View, {\n    style: styles.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.formText1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, \"Ag\\xEAncia:\"), React.createElement(TextInput, {\n    style: styles.formInput,\n    placeholder: \"Digite a Ag\\xEAncia\",\n    keyboardType: \"numeric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.formText1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"Conta Corrente:\"), React.createElement(TextInput, {\n    style: styles.formInput,\n    placeholder: \"Digite a Conta Corrente\",\n    keyboardType: \"numeric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.formText1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"Valor do Dep\\xF3sito: R$\"), React.createElement(TextInput, {\n    placeholder: \"Digite o valor\",\n    keyboardType: \"numeric\",\n    style: styles.formInput,\n    onChangeText: function onChangeText(valor) {\n      return setDados(_objectSpread(_objectSpread({}, dados), {}, {\n        valor: parseInt(valor)\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.formText1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, \"S\\xF3 alegria SoulMili - Total a ser depositado\"), React.createElement(Text, {\n    style: styles.formText2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"       R$ \" + (resultado + dados.valor)), React.createElement(TouchableOpacity, {\n    style: styles.formTouch,\n    onPress: function onPress() {\n      return setResultado(dados.valor * dados.acr);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.formTouchText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 23\n    }\n  }, \"Depositar\"))), React.createElement(Text, {\n    style: styles.formText3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, \"Saldo Atual:\"), React.createElement(Text, {\n    style: styles.formText4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"R$ \" + (saldo + resultado + dados.valor))));\n}","map":{"version":3,"sources":["E:/SoulCode/Reactnt/SoulMili/src/Componentes/Form.jsx"],"names":["React","useState","styles","Dados","navigation","valor","acr","saldo","dados","setDados","resultado","setResultado","setSaldo","formImg","require","dadosText","form","formText1","formInput","parseInt","formText2","formTouch","formTouchText","formText3","formText4"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Text, StyleSheet,View, Button, TextInput, Image, TouchableOpacity} from \"react-native\";\r\nimport { styles } from '../Style/style';\r\n\r\n\r\n\r\nexport default function Dados({navigation}){\r\n\r\n    const [dados, setDados] = useState({\r\n        valor:0,\r\n        acr:0.70,\r\n        saldo:0\r\n      \r\n    });\r\n\r\n    const [resultado, setResultado] = useState(0);\r\n\r\n    const [saldo,setSaldo] = useState(1000);\r\n\r\n\r\n\r\n    return (\r\n        <View style={styles.dados}>\r\n\r\n            <View>\r\n                <Image style={styles.formImg} source={require('../../img/Logo1.png')}/>\r\n            </View>\r\n           \r\n            <Text style={styles.dadosText}>Dados para Depósito</Text>\r\n\r\n            <View style={styles.form}>\r\n\r\n                <Text style={styles.formText1}>Agência:</Text>\r\n                <TextInput style={styles.formInput}  placeholder='Digite a Agência'  keyboardType=\"numeric\"/>\r\n\r\n            </View>\r\n\r\n            \r\n            <View style={styles.form}>\r\n\r\n                <Text style={styles.formText1}>Conta Corrente:</Text>\r\n\r\n                <TextInput style={styles.formInput}  placeholder='Digite a Conta Corrente'  keyboardType=\"numeric\"/>\r\n\r\n            </View>\r\n            \r\n            <View style={styles.form}>\r\n\r\n                <Text style={styles.formText1}>Valor do Depósito: R$</Text>\r\n\r\n                \r\n                <TextInput placeholder=\"Digite o valor\" keyboardType=\"numeric\" style={styles.formInput} \r\n            onChangeText={\r\n                (valor) => setDados ({\r\n                    ...dados, valor:  parseInt(valor)          })\r\n            }/>\r\n\r\n            </View>\r\n\r\n            <View>\r\n                \r\n                <Text style={styles.formText1}>{`Só alegria SoulMili - Total a ser depositado`}</Text>     \r\n                <Text style={styles.formText2}>{`       R$ ${resultado + dados.valor}`}</Text> \r\n\r\n                <TouchableOpacity style={styles.formTouch} onPress={() => setResultado(dados.valor * dados.acr)}>\r\n                <View><Text style={styles.formTouchText}>Depositar</Text></View></TouchableOpacity> \r\n\r\n                <Text style={styles.formText3}>{`Saldo Atual:`}</Text>     \r\n                <Text style={styles.formText4}>{`R$ ${saldo + resultado + dados.valor }`}</Text> \r\n                \r\n\r\n            </View>\r\n\r\n          \r\n\r\n\r\n         \r\n\r\n        \r\n            \r\n        </View>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}